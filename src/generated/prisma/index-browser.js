
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Hsaccess_levelsScalarFieldEnum = {
  id: 'id',
  description: 'description'
};

exports.Prisma.HsbranchesScalarFieldEnum = {
  id: 'id',
  description: 'description'
};

exports.Prisma.HsvaliditiesScalarFieldEnum = {
  id: 'id',
  branch_id: 'branch_id',
  employee_id: 'employee_id',
  status: 'status',
  request_id: 'request_id',
  created_at: 'created_at',
  modified_at: 'modified_at'
};

exports.Prisma.Hsvalidity_productsScalarFieldEnum = {
  id: 'id',
  validity_id: 'validity_id',
  product_cod: 'product_cod',
  quantity: 'quantity',
  validity_date: 'validity_date',
  treat_id: 'treat_id'
};

exports.Prisma.Hsvalidity_requestsScalarFieldEnum = {
  id: 'id',
  branch_id: 'branch_id',
  analyst_id: 'analyst_id',
  conferee_id: 'conferee_id',
  status: 'status',
  created_at: 'created_at',
  modified_at: 'modified_at'
};

exports.Prisma.Hsvalidity_request_productsScalarFieldEnum = {
  id: 'id',
  request_id: 'request_id',
  status: 'status',
  product_cod: 'product_cod',
  validity_date: 'validity_date'
};

exports.Prisma.Hsvalidity_treatmentsScalarFieldEnum = {
  id: 'id',
  description: 'description'
};

exports.Prisma.HsemployeesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  username: 'username',
  access_level: 'access_level',
  branch_id: 'branch_id',
  matriculation: 'matriculation',
  display_username: 'display_username',
  email: 'email',
  email_verified: 'email_verified',
  image: 'image',
  created_at: 'created_at',
  modified_at: 'modified_at'
};

exports.Prisma.HssessionsScalarFieldEnum = {
  id: 'id',
  expires_at: 'expires_at',
  token: 'token',
  created_at: 'created_at',
  modified_at: 'modified_at',
  ip_address: 'ip_address',
  user_agent: 'user_agent',
  user_id: 'user_id'
};

exports.Prisma.HsaccountsScalarFieldEnum = {
  id: 'id',
  account_id: 'account_id',
  provider_id: 'provider_id',
  user_id: 'user_id',
  access_token: 'access_token',
  refresh_token: 'refresh_token',
  id_token: 'id_token',
  access_token_expires_at: 'access_token_expires_at',
  refresh_token_expires_at: 'refresh_token_expires_at',
  scope: 'scope',
  password: 'password',
  created_at: 'created_at',
  modified_at: 'modified_at'
};

exports.Prisma.HsverificationsScalarFieldEnum = {
  id: 'id',
  identifier: 'identifier',
  value: 'value',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.hsvalidities_status = exports.$Enums.hsvalidities_status = {
  Pendente: 'Pendente',
  Em_andamento: 'Em_andamento',
  Concluido: 'Concluido'
};

exports.hsvalidity_requests_status = exports.$Enums.hsvalidity_requests_status = {
  Pendente: 'Pendente',
  Em_andamento: 'Em_andamento',
  Concluido: 'Concluido',
  Expirado: 'Expirado'
};

exports.hsvalidity_request_products_status = exports.$Enums.hsvalidity_request_products_status = {
  Nao_encontrado: 'Nao_encontrado',
  Nao_vistoriado: 'Nao_vistoriado',
  Vistoriado: 'Vistoriado'
};

exports.Prisma.ModelName = {
  hsaccess_levels: 'hsaccess_levels',
  hsbranches: 'hsbranches',
  hsvalidities: 'hsvalidities',
  hsvalidity_products: 'hsvalidity_products',
  hsvalidity_requests: 'hsvalidity_requests',
  hsvalidity_request_products: 'hsvalidity_request_products',
  hsvalidity_treatments: 'hsvalidity_treatments',
  hsemployees: 'hsemployees',
  hssessions: 'hssessions',
  hsaccounts: 'hsaccounts',
  hsverifications: 'hsverifications'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
